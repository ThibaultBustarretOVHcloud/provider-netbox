//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Device) DeepCopyInto(out *Device) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Device.
func (in *Device) DeepCopy() *Device {
	if in == nil {
		return nil
	}
	out := new(Device)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Device) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInitParameters) DeepCopyInto(out *DeviceInitParameters) {
	*out = *in
	if in.AssetTag != nil {
		in, out := &in.AssetTag, &out.AssetTag
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(float64)
		**out = **in
	}
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.CustomFields != nil {
		in, out := &in.CustomFields, &out.CustomFields
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LocalContextData != nil {
		in, out := &in.LocalContextData, &out.LocalContextData
		*out = new(string)
		**out = **in
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(float64)
		**out = **in
	}
	if in.PlatformID != nil {
		in, out := &in.PlatformID, &out.PlatformID
		*out = new(float64)
		**out = **in
	}
	if in.RackFace != nil {
		in, out := &in.RackFace, &out.RackFace
		*out = new(string)
		**out = **in
	}
	if in.RackID != nil {
		in, out := &in.RackID, &out.RackID
		*out = new(float64)
		**out = **in
	}
	if in.RackPosition != nil {
		in, out := &in.RackPosition, &out.RackPosition
		*out = new(float64)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisID != nil {
		in, out := &in.VirtualChassisID, &out.VirtualChassisID
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisMaster != nil {
		in, out := &in.VirtualChassisMaster, &out.VirtualChassisMaster
		*out = new(bool)
		**out = **in
	}
	if in.VirtualChassisPosition != nil {
		in, out := &in.VirtualChassisPosition, &out.VirtualChassisPosition
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisPriority != nil {
		in, out := &in.VirtualChassisPriority, &out.VirtualChassisPriority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInitParameters.
func (in *DeviceInitParameters) DeepCopy() *DeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInterface) DeepCopyInto(out *DeviceInterface) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInterface.
func (in *DeviceInterface) DeepCopy() *DeviceInterface {
	if in == nil {
		return nil
	}
	out := new(DeviceInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeviceInterface) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInterfaceInitParameters) DeepCopyInto(out *DeviceInterfaceInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LagDeviceInterfaceID != nil {
		in, out := &in.LagDeviceInterfaceID, &out.LagDeviceInterfaceID
		*out = new(float64)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Mgmtonly != nil {
		in, out := &in.Mgmtonly, &out.Mgmtonly
		*out = new(bool)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.ParentDeviceInterfaceID != nil {
		in, out := &in.ParentDeviceInterfaceID, &out.ParentDeviceInterfaceID
		*out = new(float64)
		**out = **in
	}
	if in.Speed != nil {
		in, out := &in.Speed, &out.Speed
		*out = new(float64)
		**out = **in
	}
	if in.TaggedVlans != nil {
		in, out := &in.TaggedVlans, &out.TaggedVlans
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UntaggedVlan != nil {
		in, out := &in.UntaggedVlan, &out.UntaggedVlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInterfaceInitParameters.
func (in *DeviceInterfaceInitParameters) DeepCopy() *DeviceInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInterfaceList) DeepCopyInto(out *DeviceInterfaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeviceInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInterfaceList.
func (in *DeviceInterfaceList) DeepCopy() *DeviceInterfaceList {
	if in == nil {
		return nil
	}
	out := new(DeviceInterfaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeviceInterfaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInterfaceObservation) DeepCopyInto(out *DeviceInterfaceObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LagDeviceInterfaceID != nil {
		in, out := &in.LagDeviceInterfaceID, &out.LagDeviceInterfaceID
		*out = new(float64)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Mgmtonly != nil {
		in, out := &in.Mgmtonly, &out.Mgmtonly
		*out = new(bool)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.ParentDeviceInterfaceID != nil {
		in, out := &in.ParentDeviceInterfaceID, &out.ParentDeviceInterfaceID
		*out = new(float64)
		**out = **in
	}
	if in.Speed != nil {
		in, out := &in.Speed, &out.Speed
		*out = new(float64)
		**out = **in
	}
	if in.TaggedVlans != nil {
		in, out := &in.TaggedVlans, &out.TaggedVlans
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UntaggedVlan != nil {
		in, out := &in.UntaggedVlan, &out.UntaggedVlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInterfaceObservation.
func (in *DeviceInterfaceObservation) DeepCopy() *DeviceInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(DeviceInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInterfaceParameters) DeepCopyInto(out *DeviceInterfaceParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceID != nil {
		in, out := &in.DeviceID, &out.DeviceID
		*out = new(float64)
		**out = **in
	}
	if in.DeviceIDRef != nil {
		in, out := &in.DeviceIDRef, &out.DeviceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeviceIDSelector != nil {
		in, out := &in.DeviceIDSelector, &out.DeviceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LagDeviceInterfaceID != nil {
		in, out := &in.LagDeviceInterfaceID, &out.LagDeviceInterfaceID
		*out = new(float64)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Mgmtonly != nil {
		in, out := &in.Mgmtonly, &out.Mgmtonly
		*out = new(bool)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.ParentDeviceInterfaceID != nil {
		in, out := &in.ParentDeviceInterfaceID, &out.ParentDeviceInterfaceID
		*out = new(float64)
		**out = **in
	}
	if in.Speed != nil {
		in, out := &in.Speed, &out.Speed
		*out = new(float64)
		**out = **in
	}
	if in.TaggedVlans != nil {
		in, out := &in.TaggedVlans, &out.TaggedVlans
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UntaggedVlan != nil {
		in, out := &in.UntaggedVlan, &out.UntaggedVlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInterfaceParameters.
func (in *DeviceInterfaceParameters) DeepCopy() *DeviceInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInterfaceSpec) DeepCopyInto(out *DeviceInterfaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInterfaceSpec.
func (in *DeviceInterfaceSpec) DeepCopy() *DeviceInterfaceSpec {
	if in == nil {
		return nil
	}
	out := new(DeviceInterfaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInterfaceStatus) DeepCopyInto(out *DeviceInterfaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInterfaceStatus.
func (in *DeviceInterfaceStatus) DeepCopy() *DeviceInterfaceStatus {
	if in == nil {
		return nil
	}
	out := new(DeviceInterfaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceList) DeepCopyInto(out *DeviceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Device, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceList.
func (in *DeviceList) DeepCopy() *DeviceList {
	if in == nil {
		return nil
	}
	out := new(DeviceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeviceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceObservation) DeepCopyInto(out *DeviceObservation) {
	*out = *in
	if in.AssetTag != nil {
		in, out := &in.AssetTag, &out.AssetTag
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(float64)
		**out = **in
	}
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.CustomFields != nil {
		in, out := &in.CustomFields, &out.CustomFields
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceTypeID != nil {
		in, out := &in.DeviceTypeID, &out.DeviceTypeID
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LocalContextData != nil {
		in, out := &in.LocalContextData, &out.LocalContextData
		*out = new(string)
		**out = **in
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(float64)
		**out = **in
	}
	if in.PlatformID != nil {
		in, out := &in.PlatformID, &out.PlatformID
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryIPv4 != nil {
		in, out := &in.PrimaryIPv4, &out.PrimaryIPv4
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryIPv6 != nil {
		in, out := &in.PrimaryIPv6, &out.PrimaryIPv6
		*out = new(float64)
		**out = **in
	}
	if in.RackFace != nil {
		in, out := &in.RackFace, &out.RackFace
		*out = new(string)
		**out = **in
	}
	if in.RackID != nil {
		in, out := &in.RackID, &out.RackID
		*out = new(float64)
		**out = **in
	}
	if in.RackPosition != nil {
		in, out := &in.RackPosition, &out.RackPosition
		*out = new(float64)
		**out = **in
	}
	if in.RoleID != nil {
		in, out := &in.RoleID, &out.RoleID
		*out = new(float64)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.SiteID != nil {
		in, out := &in.SiteID, &out.SiteID
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisID != nil {
		in, out := &in.VirtualChassisID, &out.VirtualChassisID
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisMaster != nil {
		in, out := &in.VirtualChassisMaster, &out.VirtualChassisMaster
		*out = new(bool)
		**out = **in
	}
	if in.VirtualChassisPosition != nil {
		in, out := &in.VirtualChassisPosition, &out.VirtualChassisPosition
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisPriority != nil {
		in, out := &in.VirtualChassisPriority, &out.VirtualChassisPriority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceObservation.
func (in *DeviceObservation) DeepCopy() *DeviceObservation {
	if in == nil {
		return nil
	}
	out := new(DeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceParameters) DeepCopyInto(out *DeviceParameters) {
	*out = *in
	if in.AssetTag != nil {
		in, out := &in.AssetTag, &out.AssetTag
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(float64)
		**out = **in
	}
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.CustomFields != nil {
		in, out := &in.CustomFields, &out.CustomFields
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceTypeID != nil {
		in, out := &in.DeviceTypeID, &out.DeviceTypeID
		*out = new(float64)
		**out = **in
	}
	if in.DeviceTypeIDRef != nil {
		in, out := &in.DeviceTypeIDRef, &out.DeviceTypeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeviceTypeIDSelector != nil {
		in, out := &in.DeviceTypeIDSelector, &out.DeviceTypeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalContextData != nil {
		in, out := &in.LocalContextData, &out.LocalContextData
		*out = new(string)
		**out = **in
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(float64)
		**out = **in
	}
	if in.PlatformID != nil {
		in, out := &in.PlatformID, &out.PlatformID
		*out = new(float64)
		**out = **in
	}
	if in.RackFace != nil {
		in, out := &in.RackFace, &out.RackFace
		*out = new(string)
		**out = **in
	}
	if in.RackID != nil {
		in, out := &in.RackID, &out.RackID
		*out = new(float64)
		**out = **in
	}
	if in.RackPosition != nil {
		in, out := &in.RackPosition, &out.RackPosition
		*out = new(float64)
		**out = **in
	}
	if in.RoleID != nil {
		in, out := &in.RoleID, &out.RoleID
		*out = new(float64)
		**out = **in
	}
	if in.RoleIDRef != nil {
		in, out := &in.RoleIDRef, &out.RoleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleIDSelector != nil {
		in, out := &in.RoleIDSelector, &out.RoleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.SiteID != nil {
		in, out := &in.SiteID, &out.SiteID
		*out = new(float64)
		**out = **in
	}
	if in.SiteIDRef != nil {
		in, out := &in.SiteIDRef, &out.SiteIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteIDSelector != nil {
		in, out := &in.SiteIDSelector, &out.SiteIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisID != nil {
		in, out := &in.VirtualChassisID, &out.VirtualChassisID
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisMaster != nil {
		in, out := &in.VirtualChassisMaster, &out.VirtualChassisMaster
		*out = new(bool)
		**out = **in
	}
	if in.VirtualChassisPosition != nil {
		in, out := &in.VirtualChassisPosition, &out.VirtualChassisPosition
		*out = new(float64)
		**out = **in
	}
	if in.VirtualChassisPriority != nil {
		in, out := &in.VirtualChassisPriority, &out.VirtualChassisPriority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceParameters.
func (in *DeviceParameters) DeepCopy() *DeviceParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceRole) DeepCopyInto(out *DeviceRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceRole.
func (in *DeviceRole) DeepCopy() *DeviceRole {
	if in == nil {
		return nil
	}
	out := new(DeviceRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeviceRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceRoleInitParameters) DeepCopyInto(out *DeviceRoleInitParameters) {
	*out = *in
	if in.ColorHex != nil {
		in, out := &in.ColorHex, &out.ColorHex
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VMRole != nil {
		in, out := &in.VMRole, &out.VMRole
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceRoleInitParameters.
func (in *DeviceRoleInitParameters) DeepCopy() *DeviceRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceRoleList) DeepCopyInto(out *DeviceRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeviceRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceRoleList.
func (in *DeviceRoleList) DeepCopy() *DeviceRoleList {
	if in == nil {
		return nil
	}
	out := new(DeviceRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeviceRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceRoleObservation) DeepCopyInto(out *DeviceRoleObservation) {
	*out = *in
	if in.ColorHex != nil {
		in, out := &in.ColorHex, &out.ColorHex
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VMRole != nil {
		in, out := &in.VMRole, &out.VMRole
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceRoleObservation.
func (in *DeviceRoleObservation) DeepCopy() *DeviceRoleObservation {
	if in == nil {
		return nil
	}
	out := new(DeviceRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceRoleParameters) DeepCopyInto(out *DeviceRoleParameters) {
	*out = *in
	if in.ColorHex != nil {
		in, out := &in.ColorHex, &out.ColorHex
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VMRole != nil {
		in, out := &in.VMRole, &out.VMRole
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceRoleParameters.
func (in *DeviceRoleParameters) DeepCopy() *DeviceRoleParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceRoleSpec) DeepCopyInto(out *DeviceRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceRoleSpec.
func (in *DeviceRoleSpec) DeepCopy() *DeviceRoleSpec {
	if in == nil {
		return nil
	}
	out := new(DeviceRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceRoleStatus) DeepCopyInto(out *DeviceRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceRoleStatus.
func (in *DeviceRoleStatus) DeepCopy() *DeviceRoleStatus {
	if in == nil {
		return nil
	}
	out := new(DeviceRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceSpec) DeepCopyInto(out *DeviceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceSpec.
func (in *DeviceSpec) DeepCopy() *DeviceSpec {
	if in == nil {
		return nil
	}
	out := new(DeviceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceStatus) DeepCopyInto(out *DeviceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceStatus.
func (in *DeviceStatus) DeepCopy() *DeviceStatus {
	if in == nil {
		return nil
	}
	out := new(DeviceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceType) DeepCopyInto(out *DeviceType) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceType.
func (in *DeviceType) DeepCopy() *DeviceType {
	if in == nil {
		return nil
	}
	out := new(DeviceType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeviceType) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceTypeInitParameters) DeepCopyInto(out *DeviceTypeInitParameters) {
	*out = *in
	if in.IsFullDepth != nil {
		in, out := &in.IsFullDepth, &out.IsFullDepth
		*out = new(bool)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.PartNumber != nil {
		in, out := &in.PartNumber, &out.PartNumber
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UHeight != nil {
		in, out := &in.UHeight, &out.UHeight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceTypeInitParameters.
func (in *DeviceTypeInitParameters) DeepCopy() *DeviceTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceTypeList) DeepCopyInto(out *DeviceTypeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeviceType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceTypeList.
func (in *DeviceTypeList) DeepCopy() *DeviceTypeList {
	if in == nil {
		return nil
	}
	out := new(DeviceTypeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeviceTypeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceTypeObservation) DeepCopyInto(out *DeviceTypeObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsFullDepth != nil {
		in, out := &in.IsFullDepth, &out.IsFullDepth
		*out = new(bool)
		**out = **in
	}
	if in.ManufacturerID != nil {
		in, out := &in.ManufacturerID, &out.ManufacturerID
		*out = new(float64)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.PartNumber != nil {
		in, out := &in.PartNumber, &out.PartNumber
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UHeight != nil {
		in, out := &in.UHeight, &out.UHeight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceTypeObservation.
func (in *DeviceTypeObservation) DeepCopy() *DeviceTypeObservation {
	if in == nil {
		return nil
	}
	out := new(DeviceTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceTypeParameters) DeepCopyInto(out *DeviceTypeParameters) {
	*out = *in
	if in.IsFullDepth != nil {
		in, out := &in.IsFullDepth, &out.IsFullDepth
		*out = new(bool)
		**out = **in
	}
	if in.ManufacturerID != nil {
		in, out := &in.ManufacturerID, &out.ManufacturerID
		*out = new(float64)
		**out = **in
	}
	if in.ManufacturerIDRef != nil {
		in, out := &in.ManufacturerIDRef, &out.ManufacturerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ManufacturerIDSelector != nil {
		in, out := &in.ManufacturerIDSelector, &out.ManufacturerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.PartNumber != nil {
		in, out := &in.PartNumber, &out.PartNumber
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UHeight != nil {
		in, out := &in.UHeight, &out.UHeight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceTypeParameters.
func (in *DeviceTypeParameters) DeepCopy() *DeviceTypeParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceTypeSpec) DeepCopyInto(out *DeviceTypeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceTypeSpec.
func (in *DeviceTypeSpec) DeepCopy() *DeviceTypeSpec {
	if in == nil {
		return nil
	}
	out := new(DeviceTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceTypeStatus) DeepCopyInto(out *DeviceTypeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceTypeStatus.
func (in *DeviceTypeStatus) DeepCopy() *DeviceTypeStatus {
	if in == nil {
		return nil
	}
	out := new(DeviceTypeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Manufacturer) DeepCopyInto(out *Manufacturer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Manufacturer.
func (in *Manufacturer) DeepCopy() *Manufacturer {
	if in == nil {
		return nil
	}
	out := new(Manufacturer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Manufacturer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManufacturerInitParameters) DeepCopyInto(out *ManufacturerInitParameters) {
	*out = *in
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManufacturerInitParameters.
func (in *ManufacturerInitParameters) DeepCopy() *ManufacturerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManufacturerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManufacturerList) DeepCopyInto(out *ManufacturerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Manufacturer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManufacturerList.
func (in *ManufacturerList) DeepCopy() *ManufacturerList {
	if in == nil {
		return nil
	}
	out := new(ManufacturerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManufacturerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManufacturerObservation) DeepCopyInto(out *ManufacturerObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManufacturerObservation.
func (in *ManufacturerObservation) DeepCopy() *ManufacturerObservation {
	if in == nil {
		return nil
	}
	out := new(ManufacturerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManufacturerParameters) DeepCopyInto(out *ManufacturerParameters) {
	*out = *in
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManufacturerParameters.
func (in *ManufacturerParameters) DeepCopy() *ManufacturerParameters {
	if in == nil {
		return nil
	}
	out := new(ManufacturerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManufacturerSpec) DeepCopyInto(out *ManufacturerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManufacturerSpec.
func (in *ManufacturerSpec) DeepCopy() *ManufacturerSpec {
	if in == nil {
		return nil
	}
	out := new(ManufacturerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManufacturerStatus) DeepCopyInto(out *ManufacturerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManufacturerStatus.
func (in *ManufacturerStatus) DeepCopy() *ManufacturerStatus {
	if in == nil {
		return nil
	}
	out := new(ManufacturerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Site) DeepCopyInto(out *Site) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Site.
func (in *Site) DeepCopy() *Site {
	if in == nil {
		return nil
	}
	out := new(Site)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Site) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteInitParameters) DeepCopyInto(out *SiteInitParameters) {
	*out = *in
	if in.AsnIds != nil {
		in, out := &in.AsnIds, &out.AsnIds
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.CustomFields != nil {
		in, out := &in.CustomFields, &out.CustomFields
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Facility != nil {
		in, out := &in.Facility, &out.Facility
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(float64)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.PhysicalAddress != nil {
		in, out := &in.PhysicalAddress, &out.PhysicalAddress
		*out = new(string)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.ShippingAddress != nil {
		in, out := &in.ShippingAddress, &out.ShippingAddress
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(float64)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteInitParameters.
func (in *SiteInitParameters) DeepCopy() *SiteInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteList) DeepCopyInto(out *SiteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Site, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteList.
func (in *SiteList) DeepCopy() *SiteList {
	if in == nil {
		return nil
	}
	out := new(SiteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SiteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteObservation) DeepCopyInto(out *SiteObservation) {
	*out = *in
	if in.AsnIds != nil {
		in, out := &in.AsnIds, &out.AsnIds
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.CustomFields != nil {
		in, out := &in.CustomFields, &out.CustomFields
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Facility != nil {
		in, out := &in.Facility, &out.Facility
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.PhysicalAddress != nil {
		in, out := &in.PhysicalAddress, &out.PhysicalAddress
		*out = new(string)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.ShippingAddress != nil {
		in, out := &in.ShippingAddress, &out.ShippingAddress
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(float64)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteObservation.
func (in *SiteObservation) DeepCopy() *SiteObservation {
	if in == nil {
		return nil
	}
	out := new(SiteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteParameters) DeepCopyInto(out *SiteParameters) {
	*out = *in
	if in.AsnIds != nil {
		in, out := &in.AsnIds, &out.AsnIds
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.CustomFields != nil {
		in, out := &in.CustomFields, &out.CustomFields
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Facility != nil {
		in, out := &in.Facility, &out.Facility
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(float64)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.PhysicalAddress != nil {
		in, out := &in.PhysicalAddress, &out.PhysicalAddress
		*out = new(string)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.ShippingAddress != nil {
		in, out := &in.ShippingAddress, &out.ShippingAddress
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(float64)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteParameters.
func (in *SiteParameters) DeepCopy() *SiteParameters {
	if in == nil {
		return nil
	}
	out := new(SiteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteSpec) DeepCopyInto(out *SiteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteSpec.
func (in *SiteSpec) DeepCopy() *SiteSpec {
	if in == nil {
		return nil
	}
	out := new(SiteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteStatus) DeepCopyInto(out *SiteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteStatus.
func (in *SiteStatus) DeepCopy() *SiteStatus {
	if in == nil {
		return nil
	}
	out := new(SiteStatus)
	in.DeepCopyInto(out)
	return out
}
